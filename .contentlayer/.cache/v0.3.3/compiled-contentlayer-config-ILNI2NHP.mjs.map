{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer/source-files'\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings'\nimport rehypePrettyCode from 'rehype-pretty-code'\nimport rehypeSlug from 'rehype-slug'\nimport remarkGfm from 'remark-gfm'\n\n/** @type {import('contentlayer/source-files').ComputedFields} */\nconst computedFields = {\n    slug: {\n        type: 'string',\n        resolve: (doc) => `/${doc._raw.flattenedPath}`,\n    },\n    slugAsParams: {\n        type: 'string',\n        resolve: (doc) => doc._raw.flattenedPath.split('/').slice(1).join('/'),\n    },\n}\n\nexport const Blog = defineDocumentType(() => ({\n    name: 'Blog',\n    filePathPattern: `/app/api/content/blog/**/*.mdx`,\n    contentType: 'mdx',\n    fields: {\n        title: {\n            type: 'string',\n            required: true\n        },\n        thumbnail : {\n            type: 'string',\n            required: true\n        },\n        slug: {\n            type: 'string',\n            required: true\n        },\n        description: {\n            type: 'string',\n            required: true\n        },\n        tags: {\n            type: 'list',\n            of: { type: 'string' },\n            required: true\n        },\n        date: {\n            type: 'string',\n            required: true\n        },\n        content: {\n            type: 'string',\n            required: true\n        },\n        altthumbnail: {\n            type: 'string',\n            required: true\n        },\n        featured: {\n            type: 'boolean',\n            required: true\n        },\n\n    }\n}))\n\n\n\n\nexport const Resume = defineDocumentType(() => ({\n    name: 'Resume',\n    filePathPattern: `/app/api/content/resume/**/*.mdx`,\n    contentType: 'mdx',\n    fields: {\n        bio: {\n            type: 'string',\n            required: true\n        },\n        summary: {\n            type: 'string',\n            required: true\n        },\n        skills: {\n            type: 'string',\n            required: true\n        },\n        tools: {\n            type: 'string',\n            required: true\n        },\n        education: {\n            type: 'string',\n            required: true\n        },\n        experience: {\n            type: 'string',\n            required: true\n        },\n        course: {\n            type: 'boolean',\n            required: true\n        },\n\n    }\n}))\n\n  export default makeSource({\n    contentDirPath: \"./app/api/content\",\n    documentTypes: [Blog, Resume],\n    mdx: {\n      remarkPlugins: [remarkGfm],\n      rehypePlugins: [\n        rehypeSlug,\n        [\n          rehypePrettyCode,\n          {\n            theme: \"github-dark\",\n            onVisitLine(node) {\n              // Prevent lines from collapsing in `display: grid` mode, and allow empty\n              // lines to be copy/pasted\n              if (node.children.length === 0) {\n                node.children = [{ type: \"text\", value: \" \" }]\n              }\n            },\n            onVisitHighlightedLine(node) {\n              node.properties.className.push(\"line--highlighted\")\n            },\n            onVisitHighlightedWord(node) {\n              node.properties.className = [\"word--highlighted\"]\n            },\n          },\n        ],\n        [\n          rehypeAutolinkHeadings,\n          {\n            properties: {\n              className: [\"subheading-anchor\"],\n              ariaLabel: \"Link to section\",\n            },\n          },\n        ],\n      ],\n    },\n  })"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAC/C,OAAO,4BAA4B;AACnC,OAAO,sBAAsB;AAC7B,OAAO,gBAAgB;AACvB,OAAO,eAAe;AAcf,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC1C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACJ,OAAO;AAAA,MACH,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,WAAY;AAAA,MACR,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,aAAa;AAAA,MACT,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,MACN,IAAI,EAAE,MAAM,SAAS;AAAA,MACrB,UAAU;AAAA,IACd;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,SAAS;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,cAAc;AAAA,MACV,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,UAAU;AAAA,MACN,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,EAEJ;AACJ,EAAE;AAKK,IAAM,SAAS,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACJ,KAAK;AAAA,MACD,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,SAAS;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,OAAO;AAAA,MACH,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,WAAW;AAAA,MACP,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,YAAY;AAAA,MACR,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,EAEJ;AACJ,EAAE;AAEA,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,MAAM,MAAM;AAAA,EAC5B,KAAK;AAAA,IACH,eAAe,CAAC,SAAS;AAAA,IACzB,eAAe;AAAA,MACb;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,OAAO;AAAA,UACP,YAAY,MAAM;AAGhB,gBAAI,KAAK,SAAS,WAAW,GAAG;AAC9B,mBAAK,WAAW,CAAC,EAAE,MAAM,QAAQ,OAAO,IAAI,CAAC;AAAA,YAC/C;AAAA,UACF;AAAA,UACA,uBAAuB,MAAM;AAC3B,iBAAK,WAAW,UAAU,KAAK,mBAAmB;AAAA,UACpD;AAAA,UACA,uBAAuB,MAAM;AAC3B,iBAAK,WAAW,YAAY,CAAC,mBAAmB;AAAA,UAClD;AAAA,QACF;AAAA,MACF;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,YAAY;AAAA,YACV,WAAW,CAAC,mBAAmB;AAAA,YAC/B,WAAW;AAAA,UACb;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,CAAC;",
  "names": []
}
