{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer/source-files'\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings/index.js'\nimport rehypePrettyCode from 'rehype-pretty-code'\nimport rehypeSlug from 'rehype-slug'\nimport remarkGfm from 'remark-gfm'\n\n/** @type {import('contentlayer/source-files').ComputedFields} */\nconst ComputedFields = {\n    slug: {\n        type: 'string',\n        resolve: (doc) => `/${doc._raw.flattenedPath}`,\n    },\n    slugAsParams: {\n        type: 'string',\n        resolve: (doc) => doc._raw.flattenedPath.split.apply('/').slice(1).join('/'),\n    }\n}\n\nexport const Doc = defineDocumentType(() => ({\n    name: 'doc',\n    filePathPattern: `complete-nextjs/**/*.mdx`,\n    contentType: 'mdx',\n    fields: {\n        title: {\n            type: 'string',\n            required: true\n        },\n        slug: {\n            type: 'string',\n            required: true\n        },\n        description: {\n            type: 'string',\n            required: true\n        },\n        tags: {\n            type: 'string',\n            required: true\n        },\n        date: {\n            type: 'string',\n            required: true\n        },\n        content: {\n            type: 'string',\n            required: true\n        },\n        altthumbnail: {\n            type: 'string',\n            required: true\n        },\n        featured: {\n            type: 'boolean',\n            required: true\n        },\n\n    }\n}))\n\nexport default makeSoure({\n    contentDirPath: 'content/blog',\n    documentType: [Doc],\n    mdx: {\n        remarkPlugins: [remarkGfm],\n        rehypePlugins: [\n            rehypeSlug,\n            [\n                rehypeAutolinkHeadings,\n                {\n                    theme: 'github-dark',\n                    onVisitLine: (node) => {\n                        if (node.children.length === 0) {\n                            node.children = [{ type: 'text', value: ' ' }];\n                        }\n                    },\n                    onVisitHighlightedLine(node) {\n                        node.properties.className.push('line--highlighted');\n                    },\n                    onVisitHighlightedWord(node) {\n                        node.properties.className.push('word--highlighted');\n                    },\n                },\n            ],\n            [\n                rehypeAutolinkHeadings,\n                {\n                    properties: {\n                        className: ['subheading-anchor'],\n                        ariaLabel: 'Link to section'\n                    }\n                }\n            ]\n        ]\n\n    }\n})"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAC/C,OAAO,4BAA4B;AACnC,OAAO,sBAAsB;AAC7B,OAAO,gBAAgB;AACvB,OAAO,eAAe;AAcf,IAAM,MAAM,mBAAmB,OAAO;AAAA,EACzC,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACJ,OAAO;AAAA,MACH,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,aAAa;AAAA,MACT,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,SAAS;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,cAAc;AAAA,MACV,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,UAAU;AAAA,MACN,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,EAEJ;AACJ,EAAE;AAEF,IAAO,8BAAQ,UAAU;AAAA,EACrB,gBAAgB;AAAA,EAChB,cAAc,CAAC,GAAG;AAAA,EAClB,KAAK;AAAA,IACD,eAAe,CAAC,SAAS;AAAA,IACzB,eAAe;AAAA,MACX;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,UACI,OAAO;AAAA,UACP,aAAa,CAAC,SAAS;AACnB,gBAAI,KAAK,SAAS,WAAW,GAAG;AAC5B,mBAAK,WAAW,CAAC,EAAE,MAAM,QAAQ,OAAO,IAAI,CAAC;AAAA,YACjD;AAAA,UACJ;AAAA,UACA,uBAAuB,MAAM;AACzB,iBAAK,WAAW,UAAU,KAAK,mBAAmB;AAAA,UACtD;AAAA,UACA,uBAAuB,MAAM;AACzB,iBAAK,WAAW,UAAU,KAAK,mBAAmB;AAAA,UACtD;AAAA,QACJ;AAAA,MACJ;AAAA,MACA;AAAA,QACI;AAAA,QACA;AAAA,UACI,YAAY;AAAA,YACR,WAAW,CAAC,mBAAmB;AAAA,YAC/B,WAAW;AAAA,UACf;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,EAEJ;AACJ,CAAC;",
  "names": []
}
